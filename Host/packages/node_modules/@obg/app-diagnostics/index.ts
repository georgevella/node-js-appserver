export * from "./lib/DiagnosticsAppRouteProvider";

export const TDiagnosticsAppRouteProvider : Symbol = Symbol.for("DiagnosticsAppRouteProvider");

import { Container } from "container-ioc";
import { ContainerConfiguration, registerModule } from "@jorge/lib-di";
import { IExpressModule, IMiddlewareConfiguration } from "@jorge/lib-di-express";
import { TRouteProvider } from "@jorge/lib-webapp-core";
import { DiagnosticsAppRouteProvider } from "./lib/DiagnosticsAppRouteProvider";

class DiagnosticsModule implements IExpressModule {
  registerServices(container: ContainerConfiguration): void {
    container.register(TDiagnosticsAppRouteProvider, DiagnosticsAppRouteProvider);
  }

  registerMiddleware(configuration: IMiddlewareConfiguration){
    configuration.useRoutingMiddleware("/diagnostics", TDiagnosticsAppRouteProvider);
  }
}

console.debug("app-diagnostic: registering modules");
registerModule(new DiagnosticsModule());
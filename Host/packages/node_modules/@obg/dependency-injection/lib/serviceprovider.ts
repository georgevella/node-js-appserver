import { Injectable, IContainer } from "container-ioc";

export interface IServiceProvider {
  getService<T>(token: any): T;

  getServices<T>(token: any): T[];
}

@Injectable()
export class ServiceProvider implements IServiceProvider {
  constructor(private container: IContainer) {}
  
  getServices<T>(token: any): T[] {
    return this.getService<T[]>(token);
  }

  public getService<T>(token: any): T {
    var instance = this.container.resolve(token) as T;
    if (instance == null) {
      throw new Error("Service not found");
    }

    return instance;
  }
}

import * as express from "express";
import { IRouteProvider, IExpressRouteProvider } from "@jorge/lib-webapphost";
import * as di from "@jorge/lib-di";
import { Injectable } from "container-ioc";

@Injectable()
export class MobileAppRouteProvider implements IExpressRouteProvider {
  router: express.Router;
  public readonly path: string = "/";
    
  constructor() {
    this.router = express.Router();

    this.router.get("/", (req, res, next) => {
      let container: di.IServiceProvider = Reflect.getMetadata(
        "container",
        req
      );
      let value: string = container.getService(Symbol.for("Name"));
      var options = {
        root: __dirname + "/../../public/",
        dotfiles: "deny",
        headers: { "x-timestamp": Date.now(), "x-sent": true }
      };

      res.sendFile("index.html", options, function(err) {
        if (err) {
          next(err);
        } else {
          console.log("Sent: " + options.root + "/index.html");
        }
      });
    });
  }

  public getExpressRouter(): express.Router {
    return this.router;
  }
}

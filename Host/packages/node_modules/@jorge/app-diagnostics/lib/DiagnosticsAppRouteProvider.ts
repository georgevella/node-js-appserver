import { IRouteProvider } from "@jorge/lib-webapphost";
import * as di from "@jorge/lib-di";
import { Injectable } from "container-ioc";
import { Express, Request, Response, NextFunction, Router } from "express";
import * as express from "express"    // required for express()
import * as path from "path";
import { IServiceProvider } from "@jorge/lib-di";
import { getCurrentContainer } from '@jorge/lib-di-express'
import { getDeviceInformation } from '@jorge/lib-devicedetection';

@Injectable()
export class DiagnosticsAppRouteProvider implements IRouteProvider {
  app: Express;
  router: Router;

  shouldHandleRequest(request: Request): boolean {
    return true;
  }

  handleRequest(
    request: Request,
    response: Response,
    next: NextFunction
  ): void {
    this.app(request, response, next);
  }

  public readonly path: string = "/test";

  constructor() {
    this.app = express();

    this.router = express.Router();

    this.router.get("/", (req, res, next) => {
      res.json({ hello: "world", device: getDeviceInformation(req) });
    });

    this.app.use("/", this.router);
  }
}

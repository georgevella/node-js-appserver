"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var container_ioc_1 = require("container-ioc");
var globalContainer = new container_ioc_1.Container();
exports.TServiceProvider = Symbol.for("IServiceProvider");
function getGlobalServiceProvider() {
    return globalContainer.resolve(exports.TServiceProvider);
}
exports.getGlobalServiceProvider = getGlobalServiceProvider;
function registerModule(module) {
    module.registerServices(globalContainer);
}
exports.registerModule = registerModule;
function createChildContainer() {
    return globalContainer.createScope();
}
exports.createChildContainer = createChildContainer;
function createChildServiceProvider(parentContainer) {
    if (parentContainer == null) {
        var childContainer_1 = globalContainer.createScope();
        return new ServiceProvider(childContainer_1);
    }
    var childContainer = parentContainer.createScope();
    return new ServiceProvider(childContainer);
}
exports.createChildServiceProvider = createChildServiceProvider;
var ServiceProvider = /** @class */ (function () {
    /**
     *
     */
    function ServiceProvider(container) {
        this.container = container;
    }
    /**
     * getService<T>
     */
    ServiceProvider.prototype.getService = function (token) {
        var instance = this.container.resolve(token);
        if (instance == null) {
            throw new Error("Service not found");
        }
        return instance;
    };
    ServiceProvider = __decorate([
        container_ioc_1.Injectable(),
        __metadata("design:paramtypes", [Object])
    ], ServiceProvider);
    return ServiceProvider;
}());
var GlobalServiceProvider = /** @class */ (function (_super) {
    __extends(GlobalServiceProvider, _super);
    /**
     *
     */
    function GlobalServiceProvider() {
        return _super.call(this, globalContainer) || this;
    }
    GlobalServiceProvider = __decorate([
        container_ioc_1.Injectable(),
        __metadata("design:paramtypes", [])
    ], GlobalServiceProvider);
    return GlobalServiceProvider;
}(ServiceProvider));
// register service provider as a singleton within the container
globalContainer.register([
    {
        token: exports.TServiceProvider,
        useClass: GlobalServiceProvider,
        lifeTime: container_ioc_1.LifeTime.Persistent
    }
]);
//# sourceMappingURL=index.js.map
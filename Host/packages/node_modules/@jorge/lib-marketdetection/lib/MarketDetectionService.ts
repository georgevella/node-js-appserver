import { Injectable, Inject } from "container-ioc";
import {
  IMarketDetectionService,
  IMarket,
  IMarketDetector,
  MarketSource
} from "./interfaces";
import * as e from "express";
import { TMarketDetector } from "./symbols";
import { Market } from "./Market";

@Injectable()
export class MarketDetectionService implements IMarketDetectionService {
  constructor(
    @Inject(TMarketDetector) private marketDetectors: IMarketDetector[]
  ) {}
  detectMarket(req: e.Request): IMarket {
    var selectedMarket: IMarket = new Market("", MarketSource.Unknown);
    this.marketDetectors.forEach(detector => {
      if (selectedMarket != undefined) {
        var market = detector.detectMarketFromRequest(req);
        if (market != undefined)
        {
            selectedMarket = market;
        }
      }
    });



    // TODO: determine default market and provide that

    return selectedMarket;
  }
}
